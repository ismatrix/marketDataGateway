syntax = "proto3";

package liveMarketDataPackage;

service SmartwinFuturesService {
  rpc GetMarketDepthStream(Empty) returns (stream MarketDepth) {}
  rpc GetBarStream(Empty) returns (stream Bar) {}
  rpc GetTickerStream(Empty) returns (stream Ticker) {}

  rpc SubscribeMarketData(Subscription) returns (Subscription) {}
  rpc UnsubscribeMarketData(Subscription) returns (Subscription) {}

  rpc GetLastMarketDepths(Subscriptions) returns (LastMarketDepthsResponse) {}
  rpc GetLastBars(Subscriptions) returns (LastBarsResponse) {}
  rpc GetLastTickers(Subscriptions) returns (LastTickersResponse) {}

  rpc GetInstruments(GetInstruments) returns (Instruments) {}
}

message Empty {
}

message GetInstruments {
  repeated string symbols = 1;
}

message Instruments {
  repeated Instrument instruments = 1;
}

message Instrument {
  string instrumentid = 1;
  string combinationtype = 2;
  string createdate = 3;
  int32 deliverymonth = 4;
  int32 deliveryyear = 5;
  string enddelivdate = 6;
  string exchangeid = 7;
  string exchangeinstid = 8;
  string expiredate = 9;
  string instlifephase = 10;
  string instrumentname = 11;
  int32 istrading = 12;
  double longmarginratio = 13;
  int32 maxlimitordervolume = 14;
  string maxmarginsidealgorithm = 15;
  int32 maxmarketordervolume = 16;
  int32 minlimitordervolume = 17;
  int32 minmarketordervolume = 18;
  string opendate = 19;
  string optionstype = 20;
  string positiondatetype = 21;
  string positiontype = 22;
  double pricetick = 23;
  string productclass = 24;
  string productid = 25;
  int32 requestid = 26;
  double shortmarginratio = 27;
  string startdelivdate = 28;
  double strikeprice = 29;
  string underlyinginstrid = 30;
  int32 underlyingmultiple = 31;
  string updatedate = 32;
  int32 volumemultiple = 33;
  double openinterest = 34;
  double preopeninterest = 35;
  int32 prerank = 36;
  int32 rank = 37;
  string update_rank_date = 38;
}

message Subscription {
  string symbol = 1;
  string resolution = 2;
  string dataType = 3;
}

message Subscriptions {
  repeated Subscription subscriptions = 1;
}

message LastMarketDepthsResponse {
  repeated MarketDepth marketDepths = 1;
}

message LastBarsResponse {
  repeated Bar bars = 1;
}

message LastTickersResponse {
  repeated Ticker tickers = 1;
}

message MarketDepth {
  string symbol = 1; //
  string resolution = 2; //
  string timestamp = 3; // TradeDay+hh24mi0
  double high = 4; // 最高价
  double low = 5; // 最低价
  double open = 6; // 开盘价
  double close = 7; // 收盘价
  double average = 8; // 日均价
  int32	volume = 9; // 成交量
  double turnover = 10; // 成交额
  double settlement = 11; // 结算价
  double openInterest = 12; // 持仓量 未平仓合
  double preSettlement = 13; // 上次结算价
  double preClose = 14; // 昨收盘
  double preoOpenInterest = 15;	// 昨持仓量
  double price = 16; // 当前价
  double upperLimit = 17; // 涨停价
  double lowerLimit = 18; // 跌停价
}

message Bar {
  string symbol = 1; //
  string resolution = 2; //
  string timestamp = 3; //
  double open = 4; //
  double high = 5; //
  double low = 6; //
  double close = 7; //
  int32 volume = 8; //
  double turnover = 9; //
  double openInterest = 10; //
}

message Ticker {
  string symbol = 1; //
  string resolution = 2; //
  string timestamp = 3; // ACTIONDAY+HH24MISS+.SSS = 1
  double price = 4; // 本次结算价
  int32	volume = 5; // 成交量
  double turnover = 6; // 成交额
  double openInterest = 7; // 持仓量 未平仓合约
  double totalVolume = 8; // 成交量
  double totalTurnover = 9; // 成交额
  double bidPrice1 = 10; // 买一价
  double askPrice1 = 11; // 卖一价
  int32	bidVolume1 = 12; // 买一量
  int32	askVolume1 = 13; // 卖一量
  string dataType = 14;
  string date = 15;
}
